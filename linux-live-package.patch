--- linux-live-5.5.0/.config	2006-09-29 15:30:28.000000000 +0300
+++ linux-live-5.5.0/.config	2006-10-17 22:53:07.000000000 +0300
@@ -16,7 +16,8 @@
 
 # kernel version. Change it to "2.6.10" for example, if you are building
 # LiveCD with a different kernel than the one you are actually running
-KERNEL=$(uname -r)
+image=$(cd $ROOT; readlink boot/vmlinuz)
+KERNEL="${image#vmlinuz-}"
 
 # list of directories which will be modularized
 # You may add 'dev' inthere in the case your distro doesn't have udev installed
--- linux-live/build	2006-10-13 15:33:24.000000000 +0300
+++ linux-live-5.5.0/build	2006-10-13 18:25:50.000000000 +0300
@@ -10,8 +10,8 @@
 echo "Changing current directory to $CHANGEDIR"
 cd $CHANGEDIR
 
-. liblinuxlive || exit 1
-. ./.config || exit 1
+. /usr/lib/liblinuxlive || exit 1
+. /etc/linux-live/config || exit 1
 
 # only root can continue, because only root can read all files from your system
 allow_only_root
@@ -30,9 +30,9 @@
 # search for kernel
 VMLINUZ=$ROOT/boot/vmlinuz
 if [ -L "$VMLINUZ" ]; then VMLINUZ=$(readlink -f $VMLINUZ); fi
-echo -ne "Enter path for the kernel you'd like to use [hit enter for $VMLINUZ]: "
-read NEWKERNEL
-if [ "$NEWKERNEL" != "" ]; then VMLINUZ="$NEWKERNEL"; fi
+#echo -ne "Enter path for the kernel you'd like to use [hit enter for $VMLINUZ]: "
+#read NEWKERNEL
+#if [ "$NEWKERNEL" != "" ]; then VMLINUZ="$NEWKERNEL"; fi
 if [ "$(ls $VMLINUZ 2>>$DEBUG)" = "" ]; then echo "cannot find $VMLINUZ"; exit 1; fi
 
 header "Creating LiveCD from your Linux"
@@ -40,7 +40,11 @@
 
 mkdir -p $CDDATA/$LIVECDNAME
 cp -R cd-root/linux/* $CDDATA/$LIVECDNAME
-cp tools/* $CDDATA/$LIVECDNAME/tools
+cp /usr/bin/{deb2lzm,dir2lzm,lzm2dir,tgz2lzm} $CDDATA/$LIVECDNAME/tools
+cp /usr/lib/liblinuxlive $CDDATA/$LIVECDNAME/tools
+cp /usr/sbin/uselivemod $CDDATA/$LIVECDNAME/tools
+cp /sbin/mksquashfs $CDDATA/$LIVECDNAME/tools
+cp /sbin/unsquashfs $CDDATA/$LIVECDNAME/tools
 cp -R DOC/LICENSE $CDDATA/$LIVECDNAME
 cp $VMLINUZ $CDDATA/boot/vmlinuz
 
--- linux-live-5.5.0/initrd/initrd_create	2006-10-17 19:42:57.000000000 +0300
+++ linux-live-5.5.0/initrd/initrd_create	2006-12-21 21:36:56.000000000 +0200
@@ -3,7 +3,7 @@
 #
 # Author:	  Tomas M. <http://www.linux-live.org>
 
-. ../.config || exit 1
+. /etc/linux-live/config || exit 1
 
 if [ "$1" != "" ]; then
    LIVECDNAME="$1"
@@ -20,6 +20,7 @@
 # rcopy is a recursive cp, which copies also symlink's real source
 # $1 = source (may be a regular file or symlink)
 # $2 = target PARENT
+# $3 = optional PREFIX to strip from $1
 #
 rcopy()
 {
@@ -16,7 +17,11 @@
       cp --parent -a "$REALPATH" "$DEST"
       ln -sf "$REALPATH" "$DEST/$SOURCE"
    else
-      cp --parent -a "$SOURCE" "$DEST"
+	  if [ "$3" ]; then
+		  tar ${3:+-C "$3"} -cf - "${1#$3/}" | tar -C "$DEST" -xf -
+	  else
+		  cp --parent -a "$SOURCE" "$DEST"
+	  fi
    fi
    if [ "$?" -ne 0 ]; then
       echo "---------------------------"
@@ -31,12 +36,13 @@
 # copy file/dir only if it exists, else skip with no error
 # $1 = source (may not exist)
 # $2 = target PARENT
+# $3 = optional PREFIX to strip from $1
 #
 rcopy_ex()
 {
    debug "rcopy_ex $1 $2"
    if [ -a "$1" ]; then
-      rcopy "$1" "$2"
+      rcopy "$1" "$2" "$3"
    fi
 }
 
@@ -48,19 +54,13 @@
 ##################################################
 # Create INITRD image now:
 
-MOUNTDIR=/tmp/initrd_mountdir_$$
-INITRD_TREE=/tmp/initrd_tree_$$
+MOUNTDIR=$(mktemp -d || echo /tmp/initrd_mountdir_$$)
+INITRD_TREE=$(mktemp -d || echo /tmp/initrd_tree_$$)
 INITRDIMG=initrd
 
 if [ ! -d $ROOT/$LMK ]; then
    echo "cannot find your kernel modules (*.ko) in $ROOT/$LMK"
    exit 1
 fi
-
-if [ "$(ls -1 rootfs/lib)" = "" ]; then
-   echo "cannot find essential libc libraries."
-   echo "please add ld-linux and libc.so to $(pwd)./rootfs/lib"
-   exit 1
-fi
 
 debug "creating empty directory $INITRD_TREE"
--- linux-live-5.5.0/tools/liblinuxlive	2006-11-28 19:08:09.000000000 +0200
+++ linux-live-5.5.0/tools/liblinuxlive	2006-12-21 21:50:27.000000000 +0200
@@ -367,6 +367,13 @@
    list_partition_devices
 }
 
+# List all network drivers
+#
+list_network_drivers()
+{
+	pcidev /m net
+}
+
 # Find file-path on given device
 # Mounts the device in $1 and returns path if found,
 # else unmounts and exits
@@ -742,11 +742,18 @@
 modprobe_essential_modules()
 {
    debug_log "modprobe_essential_modules" "$*"
+   echolog "Loading PCI modules"
+   for m in $(modules_map pcimap); do
+      modprobe_module $m
+   done
 
    echolog "starting loop device support"
    modprobe_module loop
    echolog "starting cdrom filesystem support"
    modprobe_module isofs
+   modprobe_module sr_mod
+   modprobe_module ide-cd
+   modprobe_module cdrom
    echolog "starting squashfs support"
    modprobe_module squashfs
    echolog "starting aufs support"
@@ -756,6 +756,15 @@
    echolog "starting ntfs support"
    modprobe_module fuse # for ntfs-3g
    modprobe_module ntfs # for ro driver
+
+   echolog "starting xfs support"
+   modprobe_module xfs
+
+   echolog "starting reiserfs support"
+   modprobe_module reiserfs
+
+   echolog "starting ext3 support"
+   modprobe_module ext3
 }
 
 # Modprobe kernel modules needed for USB masstorage devices
@@ -464,6 +493,8 @@
       modprobe_module uhci-hcd
    fi
    modprobe_module usb-storage
+   modprobe_module usbkbd
+   modprobe_module usbhid
 }
 
 # Load drivers for PCMCIA Cardbus devices
@@ -561,0 +593,29 @@
+
+# create modprobe.conf file $1/etc/modprobe.conf with appropriate ethX module aliases
+# $1 = root directory (union)
+#
+modprobe_update()
+{
+	i=0
+	> $1/etc/modprobe.conf
+	for drv in $(list_network_drivers); do
+		echo "alias eth$i $drv" >> $1/etc/modprobe.conf
+		i=$((i+1))
+	done
+}
+
+# list all pci devices recognized on this system
+# $1 = pcimap | usbmap
+modules_map()
+{
+	t=$1
+	d=/proc/bus/pci/devices
+	k=`uname -r`
+	while read a id b; do
+		v=0x0000${id%????}
+		d=0x0000${id#????}
+		# pci module         vendor     device     subvendor  subdevice  class      class_mask driver_data
+		# nvidia               0x000010de 0xffffffff 0xffffffff 0xffffffff 0x00030200 0xffffffff 0x0
+		echo $v $d
+	done < $d | grep -f /proc/self/fd/0 /lib/modules/$k/modules.$t | awk '{print $1}' | sort -u
+}
--- linux-live-5.5.0/cd-root/boot/isolinux/isolinux.cfg	2006-05-05 23:25:22.000000000 +0300
+++ linux-live-5.5.0/cd-root/boot/isolinux/isolinux.cfg	2006-10-03 14:03:53.000000000 +0300
@@ -7,7 +7,7 @@
 LANEL linux
 MENU LABEL Run linux
 KERNEL /boot/vmlinuz
-APPEND vga=769 initrd=/boot/initrd.gz ramdisk_size=6666 root=/dev/ram0 rw
+APPEND vga=769 initrd=/boot/initrd.gz ramdisk_size=6666 root=/dev/ram0 rw
 
 LABEL memtest
 MENU LABEL Run Memtest utility
